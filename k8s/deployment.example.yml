---
apiVersion: v1
kind: Namespace
metadata:
  name: my-app

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: my-app
type: Opaque
data:
  uri: POSTGRES_URI_B64_ENCODED

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: my-app
type: Opaque
data:
  key: JWT_SECRET_KEY_B64_ENCODED

---
apiVersion: v1
kind: Secret
metadata:
  name: resend-secret
  namespace: my-app
type: Opaque
data:
  api_key: RESEND_API_KEY_B64_ENCODED

---
apiVersion: v1
kind: Secret
metadata:
  name: oauth-secret
  namespace: my-app
type: Opaque
data:
  google_key: OAUTH_GOOGLE_CLIENT_ID_B64_ENCODED
  google_secret: OAUTH_GOOGLE_SECRET_B64_ENCODED
  github_key: OAUTH_GITHUB_CLIENT_ID_B64_ENCODED
  github_secret: OAUTH_GITHUB_SECRET_B64_ENCODED

---
apiVersion: v1
kind: Secret
metadata:
  name: s3-magalu-secret
  namespace: my-app
type: Opaque
data:
  access_key_id: S3_ACCESS_KEY_ID_B64_ENCODED
  secret_access_key: S3_SECRET_ACCESS_KEY_B64_ENCODED

---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-secret
  namespace: my-app
type: Opaque
data:
  api_key: STRIPE_API_KEY_B64_ENCODED

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-api
  namespace: my-app
spec:
  selector:
    matchLabels:
      app: my-app-api
  template:
    metadata:
      labels:
        app: my-app-api
    spec:
      containers:
        - name: my-app-api
          image: lombardi/gopherbase:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
          env:
            - name: API_HOST_URL
              value: https://api.patos.dev/
            - name: APP_HOST_URL
              value: https://app.patos.dev/
            - name: GIN_MODE
              value: release
            - name: PROJECT_NAME
              value: patos-app
            - name: NOREPLY_EMAIL
              value: no-reply@patos.dev
            - name: S3_BUCKET
              value: gopher-base
            - name: POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: uri
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: key
            - name: RESEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: resend-secret
                  key: api_key
            - name: OAUTH_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: google_client_id
            - name: OAUTH_GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: google_secret
            - name: OAUTH_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: github_client_id
            - name: OAUTH_GITHUB_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth-secret
                  key: github_secret
            - name: S3_ENDPOINT
              value: br-se1.magaluobjects.com
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-magalu-secret
                  key: access_key_id
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-magalu-secret
                  key: secret_access_key
            - name: STRIPE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: stripe-secret
                  key: api_key

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-api-svc
  namespace: my-app
spec:
  type: ClusterIP
  selector:
    app: my-app-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-api-https-ingress
  namespace: my-app

  annotations:
    spec.ingressClassName: traefik
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure

spec:
  rules:
    - host: api.patos.dev
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-app-api-svc
                port:
                  number: 80
  tls:
    - hosts:
        - api.patos.dev
      secretName: my-app-api-tls

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: my-app-api-http-ingress-redirect
  namespace: my-app

  annotations:
    spec.ingressClassName: traefik
    traefik.ingress.kubernetes.io/router.middlewares: default-redirectscheme@kubernetescrd
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: api.patos.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: dummy-service
                port:
                  number: 80
